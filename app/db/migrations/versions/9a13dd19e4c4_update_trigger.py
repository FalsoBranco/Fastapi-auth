"""update trigger

Revision ID: 9a13dd19e4c4
Revises: a2b12d156a2c
Create Date: 2022-05-17 14:49:11.146588

"""
from alembic import op
import sqlalchemy as sa
from alembic_utils.pg_function import PGFunction
from sqlalchemy import text as sql_text
from alembic_utils.pg_trigger import PGTrigger
from sqlalchemy import text as sql_text

# revision identifiers, used by Alembic.
revision = '9a13dd19e4c4'
down_revision = 'a2b12d156a2c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    public_update_updated_at_column = PGFunction(
        schema="public",
        signature="update_updated_at_column()",
        definition="RETURNS TRIGGER AS\n    $$\n    BEGIN\n        NEW.updated_at = now();\n        RETURN NEW;\n    END;\n    $$ language 'plpgsql'"
    )
    op.create_entity(public_update_updated_at_column)

    public_users_update_user_modtime = PGTrigger(
        schema="public",
        signature="update_user_modtime",
        on_entity="public.users",
        is_constraint=False,
        definition='BEFORE UPDATE ON public.users\n        FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column()'
    )
    op.create_entity(public_users_update_user_modtime)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    public_users_update_user_modtime = PGTrigger(
        schema="public",
        signature="update_user_modtime",
        on_entity="public.users",
        is_constraint=False,
        definition='BEFORE UPDATE ON public.users\n        FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column()'
    )
    op.drop_entity(public_users_update_user_modtime)

    public_update_updated_at_column = PGFunction(
        schema="public",
        signature="update_updated_at_column()",
        definition="RETURNS TRIGGER AS\n    $$\n    BEGIN\n        NEW.updated_at = now();\n        RETURN NEW;\n    END;\n    $$ language 'plpgsql'"
    )
    op.drop_entity(public_update_updated_at_column)

    # ### end Alembic commands ###
